[
  {
    "role": "user",
    "content": "what is  maven plugin to generate client code from swagger at project build time (ie?"
  },
  {
    "role": "assistant",
    "content": "One popular Maven plugin to generate client code from Swagger at project build time is \"swagger-codegen-maven-plugin\". This plugin utilizes the Swagger Codegen tool to take a Swagger API definition file and automatically generate client code in various programming languages.\n\nTo use the plugin, you need to configure it in your project's Maven build configuration (pom.xml). Here is an example configuration:\n\n```xml\n<build>\n  <plugins>\n    <plugin>\n      <groupId>io.swagger</groupId>\n      <artifactId>swagger-codegen-maven-plugin</artifactId>\n      <version>3.0.27</version>\n      <executions>\n        <execution>\n          <id>generate-client</id>\n          <phase>generate-sources</phase>\n          <goals>\n            <goal>generate</goal>\n          </goals>\n          <configuration>\n            <inputSpec>src/main/resources/swagger.yaml</inputSpec>\n            <language>java</language>\n            <output>target/generated-sources/swagger</output>\n          </configuration>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n</build>\n```\n\nIn this example, the plugin is configured to generate Java client code based on the Swagger API definition file located at \"src/main/resources/swagger.yaml\". The generated code will be placed in \"target/generated-sources/swagger\" directory.\n\nYou can customize the configuration according to your project requirements, such as specifying different languages, input/output paths, and additional settings supported by Swagger Codegen.\n\nAfter this configuration, running the Maven build command (e.g., `mvn clean install`) will trigger the code generation process and generate the client code based on the Swagger definition file."
  }
]
